{"version":3,"file":"moltin.cjs.js","sources":["../src/config.js","../src/utils/helpers.js","../src/factories/request.js","../src/extends/base.js","../src/extends/crud.js","../src/endpoints/products.js","../src/endpoints/currencies.js","../src/endpoints/brands.js","../src/endpoints/cart.js","../src/endpoints/categories.js","../src/endpoints/collections.js","../src/endpoints/orders.js","../src/endpoints/gateways.js","../src/endpoints/customers.js","../src/endpoints/inventories.js","../src/endpoints/flows.js","../src/endpoints/fields.js","../src/endpoints/addresses.js","../src/moltin.js"],"sourcesContent":["import { version } from '../package.json';\n\nclass Config {\n  constructor(options) {\n    const { application, client_id, client_secret, currency, host } = options;\n\n    this.application = application;\n    this.client_id = client_id;\n    this.client_secret = client_secret;\n    this.host = host || 'api.moltin.com';\n    this.protocol = 'https';\n    this.version = 'v2';\n    this.currency = currency;\n    this.auth = {\n      expires: 3600,\n      uri: 'oauth/access_token',\n    };\n    this.sdk = {\n      version,\n      language: 'JS',\n    };\n  }\n}\n\nexport default Config;\n","import { pluralize, underscore } from 'inflected';\nimport cuid from 'cuid';\n\nexport function buildRelationshipData(type, ids) {\n  let data = [];\n\n  if (ids === null || ids.length === 0) return data;\n\n  if (typeof ids === 'string') {\n    const obj = { type: underscore(type), id: ids };\n\n    if (type === 'main-image') return obj;\n\n    return [obj];\n  }\n\n  if (Array.isArray(ids)) {\n    data = ids.map(id => ({\n      type: underscore(type),\n      id,\n    }));\n  }\n\n  return data;\n}\n\nexport function formatUrlResource(type) {\n  if (type === 'main-image') return type;\n\n  return pluralize(type);\n}\n\nexport function createCartIdentifier() {\n  return cuid();\n}\n\nexport function cartIdentifier() {\n  return createCartIdentifier();\n}\n\nexport function parseJSON(response) {\n  if (response.status === 204) {\n    return new Promise((resolve) => {\n      resolve({\n        status: response.status,\n        ok: response.ok,\n        json: '{}',\n      });\n    });\n  }\n\n  return new Promise(resolve => response.json()\n  .then(json => resolve({\n    status: response.status,\n    ok: response.ok,\n    json,\n  })));\n}\n\nfunction formatFilterString(type, filter) {\n  const filterStringArray = Object.keys(filter).map((key) => {\n    const value = filter[key];\n\n    return `${type}(${key},${value})`;\n  });\n\n  return filterStringArray.join(':');\n}\n\nfunction formatQueryString(key, value) {\n  if (key === 'limit' || key === 'offset') {\n    return `page${(value)}`;\n  }\n\n  if (key === 'filter') {\n    const filterValues = Object.keys(value).map(\n      filter => formatFilterString(filter, value[filter]));\n\n    return `${key}=${filterValues.join(':')}`;\n  }\n\n  return `${key}=${value}`;\n}\n\nfunction buildQueryParams({ includes, sort, limit, offset, filter }) {\n  const query = {};\n\n  if (includes) {\n    query.include = includes;\n  }\n\n  if (sort) {\n    query.sort = `(${sort})`;\n  }\n\n  if (limit) {\n    query.limit = `[limit]=${limit}`;\n  }\n\n  if (offset) {\n    query.offset = `[offset]=${offset}`;\n  }\n\n  if (filter) {\n    query.filter = filter;\n  }\n\n  return Object.keys(query).map(k => formatQueryString(k, query[k])).join('&');\n}\n\nexport function buildURL(endpoint, params) {\n  if (params.includes || params.sort || params.limit || params.offset || params.filter) {\n    const paramsString = buildQueryParams(params);\n\n    return `${endpoint}?${paramsString}`;\n  }\n\n  return endpoint;\n}\n\nexport function buildRequestBody(body) {\n  let parsedBody;\n\n  if (body) {\n    parsedBody = `{\n      \"data\": ${JSON.stringify(body)}\n    }`;\n  }\n\n  return parsedBody;\n}\n\nexport function buildCartItemData(id, quantity = null, type = 'cart_item') {\n  const payload = {\n    type,\n  };\n\n  if (type === 'cart_item') {\n    Object.assign(payload, {\n      id,\n      quantity: parseInt(quantity, 10),\n    });\n  }\n\n  if (type === 'promotion_item') {\n    Object.assign(payload, {\n      code: id,\n    });\n  }\n\n  return payload;\n}\n\nexport function buildCartCheckoutData(customer, billing_address, shipping_address) {\n  let parsedCustomer = customer;\n\n  if (typeof customer === 'string') parsedCustomer = { id: customer };\n\n  return {\n    customer: parsedCustomer,\n    billing_address,\n    shipping_address,\n  };\n}\n","import { buildRequestBody, parseJSON } from '../utils/helpers';\n\nclass RequestFactory {\n  constructor(config) {\n    this.config = config;\n  }\n\n  authenticate() {\n    const { config } = this;\n\n    if (!config.client_id) {\n      throw new Error('You must have a client_id set');\n    }\n\n    if (!config.host) {\n      throw new Error('You have not specified an API host');\n    }\n\n    const body = {\n      grant_type: config.client_secret ? 'client_credentials' : 'implicit',\n      client_id: config.client_id,\n    };\n\n    if (config.client_secret) {\n      body.client_secret = config.client_secret;\n    }\n\n    const promise = new Promise((resolve, reject) => {\n      fetch(`${config.protocol}://${config.host}/${config.auth.uri}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: Object.keys(body).map(k => `${encodeURIComponent(k)}=${encodeURIComponent(body[k])}`).join('&'),\n      })\n      .then(parseJSON)\n      .then((response) => {\n        if (response.ok) resolve(response);\n\n        reject(response);\n      })\n      .catch(error => reject(error));\n    });\n\n    return promise;\n  }\n\n  send(uri, method, body = undefined, token = undefined) {\n    const { config } = this;\n\n    const promise = new Promise((resolve, reject) => {\n      const req = (access_token) => {\n        const headers = {\n          Authorization: `Bearer: ${access_token}`,\n          'Content-Type': 'application/json',\n          'X-MOLTIN-SDK-LANGUAGE': config.sdk.language,\n          'X-MOLTIN-SDK-VERSION': config.sdk.version,\n        };\n\n        if (config.application) {\n          headers['X-MOLTIN-APPLICATION'] = config.application;\n        }\n\n        if (config.currency) {\n          headers['X-MOLTIN-CURRENCY'] = config.currency;\n        }\n\n        if (token) {\n          headers['X-MOLTIN-CUSTOMER-TOKEN'] = token;\n        }\n\n        /* eslint no-undef: \"off\" */\n        fetch(`${config.protocol}://${config.host}/${config.version}/${uri}`, {\n          method: method.toUpperCase(),\n          headers,\n          body: buildRequestBody(body),\n        })\n        .then(parseJSON)\n        .then((response) => {\n          if (response.ok) resolve(response);\n\n          reject(response);\n        })\n        .catch(error => reject(error));\n      };\n\n      return this.authenticate()\n      .then(({ json }) => req(json.access_token))\n      .catch(error => reject(error));\n    });\n\n    return promise;\n  }\n}\n\nexport default RequestFactory;\n","import RequestFactory from '../factories/request';\nimport { buildURL } from '../utils/helpers';\n\nclass BaseExtend {\n  constructor(config) {\n    this.request = new RequestFactory(config);\n\n    this.config = config;\n  }\n\n  All(token = null) {\n    const { includes, sort, limit, offset, filter } = this;\n\n    this.call = this.request.send(buildURL(this.endpoint, {\n      includes,\n      sort,\n      limit,\n      offset,\n      filter,\n    }), 'GET', undefined, token);\n\n    return this.call;\n  }\n\n  Get(id, token = null) {\n    this.call = this.request.send(buildURL(`${this.endpoint}/${id}`, {\n      includes: this.includes,\n    }), 'GET', undefined, token);\n\n    return this.call;\n  }\n\n  Filter(filter) {\n    this.filter = filter;\n\n    return this;\n  }\n\n  Limit(value) {\n    this.limit = value;\n\n    return this;\n  }\n\n  Offset(value) {\n    this.offset = value;\n\n    return this;\n  }\n\n  Sort(value) {\n    this.sort = value;\n\n    return this;\n  }\n\n  With(includes) {\n    if (includes) this.includes = includes.toString().toLowerCase();\n\n    return this;\n  }\n}\n\nexport default BaseExtend;\n","import { singularize } from 'inflected';\n\nimport BaseExtend from './base';\n\nclass CRUDExtend extends BaseExtend {\n  Create(body) {\n    return this.request.send(this.endpoint, 'POST', { ...body, type: singularize(this.endpoint) });\n  }\n\n  Delete(id) {\n    return this.request.send(`${this.endpoint}/${id}`, 'DELETE');\n  }\n\n  Update(id, body) {\n    return this.request.send(`${this.endpoint}/${id}`, 'PUT', { ...body, type: singularize(this.endpoint) });\n  }\n}\n\nexport default CRUDExtend;\n","import CRUDExtend from '../extends/crud';\nimport { buildRelationshipData, formatUrlResource } from '../utils/helpers';\n\nclass ProductsEndpoint extends CRUDExtend {\n  constructor(endpoint) {\n    super(endpoint);\n\n    this.endpoint = 'products';\n  }\n\n  CreateRelationships(id, type, resources) {\n    const body = buildRelationshipData(type, resources);\n    const parsedType = formatUrlResource(type);\n\n    return this.request.send(`${this.endpoint}/${id}/relationships/${parsedType}`, 'POST', body);\n  }\n\n  DeleteRelationships(id, type, resources) {\n    const body = buildRelationshipData(type, resources);\n    const parsedType = formatUrlResource(type);\n\n    return this.request.send(`${this.endpoint}/${id}/relationships/${parsedType}`, 'DELETE', body);\n  }\n\n  UpdateRelationships(id, type, resources = null) {\n    const body = buildRelationshipData(type, resources);\n    const parsedType = formatUrlResource(type);\n\n    return this.request.send(`${this.endpoint}/${id}/relationships/${parsedType}`, 'PUT', body);\n  }\n}\n\nexport default ProductsEndpoint;\n","import BaseExtend from '../extends/base';\n\nclass CurrenciesEndpoint extends BaseExtend {\n  constructor(endpoint) {\n    super(endpoint);\n\n    this.endpoint = 'currencies';\n  }\n\n  Create(body) {\n    return this.request.send(`${this.endpoint}`, 'POST', body);\n  }\n\n  Delete(id) {\n    return this.request.send(`${this.endpoint}/${id}`, 'DELETE');\n  }\n\n  Update(id, body) {\n    return this.request.send(`${this.endpoint}/${id}`, 'PUT', body);\n  }\n}\n\nexport default CurrenciesEndpoint;\n","import CRUDExtend from '../extends/crud';\n\nclass BrandsEndpoint extends CRUDExtend {\n  constructor(endpoint) {\n    super(endpoint);\n\n    this.endpoint = 'brands';\n  }\n}\n\nexport default BrandsEndpoint;\n","import BaseExtend from '../extends/base';\n\nimport { buildCartItemData, buildCartCheckoutData } from '../utils/helpers';\n\nclass CartEndpoint extends BaseExtend {\n  constructor(request, id) {\n    super(...arguments);\n\n    this.request = request;\n    this.cartId = id;\n    this.endpoint = 'carts';\n  }\n\n  Get() {\n    return this.request.send(`${this.endpoint}/${this.cartId}`, 'GET');\n  }\n\n  Items() {\n    return this.request.send(`${this.endpoint}/${this.cartId}/items`, 'GET');\n  }\n\n  AddProduct(productId, quantity = 1) {\n    const body = buildCartItemData(productId, quantity);\n\n    return this.request.send(`${this.endpoint}/${this.cartId}/items`, 'POST', body);\n  }\n\n  AddCustomItem(body) {\n    const itemObject = Object.assign(body, {\n      type: 'custom_item',\n    });\n\n    return this.request.send(`${this.endpoint}/${this.cartId}/items`, 'POST', itemObject);\n  }\n\n  AddPromotion(code) {\n    const body = buildCartItemData(code, null, 'promotion_item');\n\n    return this.request.send(`${this.endpoint}/${this.cartId}/items`, 'POST', body);\n  }\n\n  RemoveItem(itemId) {\n    return this.request.send(`${this.endpoint}/${this.cartId}/items/${itemId}`, 'DELETE');\n  }\n\n  UpdateItemQuantity(itemId, quantity) {\n    const body = buildCartItemData(itemId, quantity);\n\n    return this.request.send(`${this.endpoint}/${this.cartId}/items/${itemId}`, 'PUT', body);\n  }\n\n  Checkout(customer, billing_address, shipping_address = billing_address) {\n    const body = buildCartCheckoutData(customer, billing_address, shipping_address);\n\n    return this.request.send(`${this.endpoint}/${this.cartId}/checkout`, 'POST', body);\n  }\n\n  Delete() {\n    return this.request.send(`${this.endpoint}/${this.cartId}`, 'DELETE');\n  }\n}\n\nexport default CartEndpoint;\n","import CRUDExtend from '../extends/crud';\n\nclass CategoriesEndpoint extends CRUDExtend {\n  constructor(endpoint) {\n    super(endpoint);\n\n    this.endpoint = 'categories';\n  }\n\n  Tree() {\n    return this.request.send(`${this.endpoint}/tree`, 'GET');\n  }\n}\n\nexport default CategoriesEndpoint;\n","import CRUDExtend from '../extends/crud';\n\nclass CollectionsEndpoint extends CRUDExtend {\n  constructor(endpoint) {\n    super(endpoint);\n\n    this.endpoint = 'collections';\n  }\n}\n\nexport default CollectionsEndpoint;\n","import BaseExtend from '../extends/base';\n\nclass OrdersEndpoint extends BaseExtend {\n  constructor(endpoint) {\n    super(endpoint);\n\n    this.endpoint = 'orders';\n  }\n\n  Items(id) {\n    return this.request.send(`${this.endpoint}/${id}/items`, 'GET');\n  }\n\n  Payment(id, body) {\n    return this.request.send(`${this.endpoint}/${id}/payments`, 'POST', body);\n  }\n\n  Transactions(id) {\n    return this.request.send(`${this.endpoint}/${id}/transactions`, 'GET');\n  }\n\n  Update(id, body) {\n    return this.request.send(`${this.endpoint}/${id}`, 'PUT', { ...body, type: 'order' });\n  }\n}\n\nexport default OrdersEndpoint;\n","import BaseExtend from '../extends/base';\n\nclass GatewaysEndpoint extends BaseExtend {\n  constructor(endpoint) {\n    super(endpoint);\n\n    this.endpoint = 'gateways';\n  }\n\n  Update(slug, body) {\n    return this.request.send(`${this.endpoint}/${slug}`, 'PUT', body);\n  }\n\n  Enabled(slug, enabled) {\n    return this.request.send(`${this.endpoint}/${slug}`, 'PUT', {\n      type: 'gateway',\n      enabled,\n    });\n  }\n}\n\nexport default GatewaysEndpoint;\n","import CRUDExtend from '../extends/crud';\n\nclass CustomersEndpoint extends CRUDExtend {\n  constructor(endpoint) {\n    super(endpoint);\n\n    this.endpoint = 'customers';\n  }\n\n  Token(email, password) {\n    return this.request.send(`${this.endpoint}/tokens`, 'POST', { email, password, type: 'token' });\n  }\n}\nexport default CustomersEndpoint;\n","import BaseExtend from '../extends/base';\n\nclass InventoriesEndpoint extends BaseExtend {\n  constructor(endpoint) {\n    super(endpoint);\n\n    this.endpoint = 'inventories';\n  }\n\n  Get(productId) {\n    return this.request.send(`${this.endpoint}/${productId}`, 'GET');\n  }\n\n  IncrementStock(productId, quantity) {\n    return this.request.send(`${this.endpoint}/${productId}/transactions`, 'POST', { action: 'increment', quantity, type: 'stock-transaction' });\n  }\n\n  DecrementStock(productId, quantity) {\n    return this.request.send(`${this.endpoint}/${productId}/transactions`, 'POST', { action: 'decrement', quantity, type: 'stock-transaction' });\n  }\n\n  AllocateStock(productId, quantity) {\n    return this.request.send(`${this.endpoint}/${productId}/transactions`, 'POST', { action: 'allocate', quantity, type: 'stock-transaction' });\n  }\n\n  DeallocateStock(productId, quantity) {\n    return this.request.send(`${this.endpoint}/${productId}/transactions`, 'POST', { action: 'deallocate', quantity, type: 'stock-transaction' });\n  }\n\n  GetTransactions(productId) {\n    return this.request.send(`${this.endpoint}/${productId}/transactions`, 'GET');\n  }\n}\n\nexport default InventoriesEndpoint;\n","import CRUDExtend from '../extends/crud';\n\nclass FlowsEndpoint extends CRUDExtend {\n  constructor(endpoint) {\n    super(endpoint);\n\n    this.endpoint = 'flows';\n  }\n\n  GetEntries(slug) {\n    return this.request.send(`${this.endpoint}/${slug}/entries`, 'GET');\n  }\n\n  GetEntry(slug, entryId) {\n    return this.request.send(`${this.endpoint}/${slug}/entries/${entryId}`, 'GET');\n  }\n\n  CreateEntry(slug, body) {\n    return this.request.send(`${this.endpoint}/${slug}/entries`, 'POST', { ...body, type: 'entry' });\n  }\n\n  UpdateEntry(slug, entryId, body) {\n    return this.request.send(`${this.endpoint}/${slug}/entries/${entryId}`, 'PUT', { ...body, type: 'entry' });\n  }\n\n  DeleteEntry(slug, entryId) {\n    return this.request.send(`${this.endpoint}/${slug}/entries/${entryId}`, 'DELETE');\n  }\n}\n\nexport default FlowsEndpoint;\n","import CRUDExtend from '../extends/crud';\n\nclass FieldsEndpoint extends CRUDExtend {\n  constructor(endpoint) {\n    super(endpoint);\n\n    this.endpoint = 'fields';\n  }\n}\n\nexport default FieldsEndpoint;\n","import { singularize } from 'inflected';\n\nimport BaseExtend from '../extends/base';\n\nclass AddressesEndpoint extends BaseExtend {\n  constructor(endpoint) {\n    super(endpoint);\n\n    this.endpoint = 'addresses';\n  }\n\n  All({ customer, token = null }) {\n    return this.request.send(`customers/${customer}/${this.endpoint}`, 'GET', undefined, token);\n  }\n\n  Get({ customer, address, token = null }) {\n    return this.request.send(\n      `customers/${customer}/${this.endpoint}/${address}`,\n      'GET',\n      undefined,\n      token,\n    );\n  }\n\n  Create({ customer, body, token = null }) {\n    return this.request.send(\n      `customers/${customer}/${this.endpoint}`,\n      'POST',\n      { ...body, type: singularize(this.endpoint) },\n      token,\n    );\n  }\n\n  Delete({ customer, address, token = null }) {\n    return this.request.send(\n      `customers/${customer}/${this.endpoint}/${address}`,\n      'DELETE',\n      undefined,\n      token,\n    );\n  }\n\n  Update({ customer, address, body, token = null }) {\n    return this.request.send(\n      `customers/${customer}/${this.endpoint}/${address}`,\n      'PUT',\n      { ...body, type: singularize(this.endpoint) },\n      token,\n    );\n  }\n}\n\nexport default AddressesEndpoint;\n","import 'fetch-everywhere';\nimport 'es6-promise';\n\nimport Config from './config';\nimport RequestFactory from './factories/request';\nimport ProductsEndpoint from './endpoints/products';\nimport CurrenciesEndpoint from './endpoints/currencies';\nimport BrandsEndpoint from './endpoints/brands';\nimport CartEndpoint from './endpoints/cart';\nimport CategoriesEndpoint from './endpoints/categories';\nimport CollectionsEndpoint from './endpoints/collections';\nimport OrdersEndpoint from './endpoints/orders';\nimport GatewaysEndpoint from './endpoints/gateways';\nimport CustomersEndpoint from './endpoints/customers';\nimport InventoriesEndpoint from './endpoints/inventories';\nimport FlowsEndpoint from './endpoints/flows';\nimport FieldsEndpoint from './endpoints/fields';\nimport AddressesEndpoint from './endpoints/addresses';\n\nimport { cartIdentifier } from './utils/helpers';\n\nexport default class Moltin {\n  constructor(config) {\n    this.config = config;\n    this.cartId = cartIdentifier();\n\n    this.request = new RequestFactory(config);\n\n    this.Products = new ProductsEndpoint(config);\n    this.Currencies = new CurrenciesEndpoint(config);\n    this.Brands = new BrandsEndpoint(config);\n    this.Categories = new CategoriesEndpoint(config);\n    this.Collections = new CollectionsEndpoint(config);\n    this.Orders = new OrdersEndpoint(config);\n    this.Gateways = new GatewaysEndpoint(config);\n    this.Customers = new CustomersEndpoint(config);\n    this.Inventories = new InventoriesEndpoint(config);\n    this.Flows = new FlowsEndpoint(config);\n    this.Fields = new FieldsEndpoint(config);\n    this.Addresses = new AddressesEndpoint(config);\n  }\n\n  // Expose `Cart` class on Moltin class\n  Cart(id = this.cartId) {\n    return new CartEndpoint(this.request, id);\n  }\n\n  // Expose `authenticate` function on the Moltin class\n  Authenticate() {\n    return this.request.authenticate();\n  }\n}\n\n// Export a function to instantiate the Moltin class\nconst gateway = config => new Moltin(new Config(config));\n\nexport { gateway };\n"],"names":["Config","options","this","application","client_id","client_secret","host","protocol","version","currency","auth","expires","uri","sdk","language","buildRelationshipData","type","ids","let","data","length","const","obj","underscore","id","Array","isArray","map","formatUrlResource","pluralize","createCartIdentifier","cuid","cartIdentifier","parseJSON","response","status","Promise","resolve","ok","json","then","formatFilterString","filter","Object","keys","key","value","join","formatQueryString","buildQueryParams","ref","query","includes","include","sort","limit","offset","k","buildURL","endpoint","params","buildRequestBody","body","parsedBody","JSON","stringify","buildCartItemData","quantity","payload","assign","parseInt","code","buildCartCheckoutData","customer","billing_address","shipping_address","parsedCustomer","RequestFactory","config","authenticate","Error","grant_type","reject","fetch","method","headers","Content-Type","encodeURIComponent","catch","error","send","token","undefined","access_token","Authorization","X-MOLTIN-SDK-LANGUAGE","X-MOLTIN-SDK-VERSION","toUpperCase","BaseExtend","request","All","call","Get","Filter","Limit","Offset","Sort","With","toString","toLowerCase","CRUDExtend","Create","singularize","Delete","Update","ProductsEndpoint","super","CreateRelationships","resources","parsedType","DeleteRelationships","UpdateRelationships","CurrenciesEndpoint","BrandsEndpoint","CartEndpoint","arguments","cartId","Items","AddProduct","productId","AddCustomItem","itemObject","AddPromotion","RemoveItem","itemId","UpdateItemQuantity","Checkout","CategoriesEndpoint","Tree","CollectionsEndpoint","OrdersEndpoint","Payment","Transactions","GatewaysEndpoint","slug","Enabled","enabled","CustomersEndpoint","Token","email","password","InventoriesEndpoint","IncrementStock","action","DecrementStock","AllocateStock","DeallocateStock","GetTransactions","FlowsEndpoint","GetEntries","GetEntry","entryId","CreateEntry","UpdateEntry","DeleteEntry","FieldsEndpoint","AddressesEndpoint","address","Moltin","Products","Currencies","Brands","Categories","Collections","Orders","Gateways","Customers","Inventories","Flows","Fields","Addresses","Cart","Authenticate","gateway"],"mappings":"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"}